{"version":3,"sources":["js/billing.js","js/node_modules/_browser-pack@5.0.1@browser-pack/_prelude.js","js/assets/js/billing.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","require","code","exports","module","process","button","$","Swal","URLParse","qs","Spinner","spinner","sendRequest","$formBilling","$stripeButtonContainer","$paypalButtonContainer","$paymentType","$paymentMethod","$paymentDuration","$opts","find","url","window","location","href","query","parse","ignoreQueryPrefix","paypal_subscription_id","paypal_order_id","session_id","PAYPAL_MAPPING","enhanced_protection","team","createPayPalSubscription","data","actions","duration","val","USER_PLAN","concat","options","intent","plan_id","subscriber","email_address","USER","email","application_context","brand_name","shipping_preference","user_action","payment_method","payer_selected","payee_preferred","cancel_url","replace","PLAN_EXPIRES_AT","start_time","subscription","createPayPalOrder","_createPayPalOrder","_callee2","body","response","message","_context2","serialize","fire","_types","orderID","statusText","text","hide","updatePayButtons","paymentMethod","paymentType","$subscriptionInput","close","prop","addClass","removeClass","paypal","PAYPAL_NOT_LOADED","props","style","color","onError","console","show","subscriptionID","toString","stringify","addQueryPrefix","format","createSubscription","createOrder","Buttons","render","on","_ref","_callee","ev","_context","preventDefault","redirectTo","sessionId","invoiceId","t0","_x","isSubscription","includes"],"mappings":"AAAA,SAASA,sBAAwB,iKCAjCA,oBAAA,WAAA,OAAAC,CAAA,EAAA,IAAAC,EAAAD,EAAA,CAAA,EAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,CAAA,EAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,gBAAA,SAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,CAAA,IAAAkB,EAAA,CAAA,EAAA,GAAA,CAAA,MAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,CAAA,CAAA,SAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,IAAA,OAAAE,EAAAK,EAAA,UAAA,CAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,CAAA,SAAAe,EAAA1B,EAAAD,EAAAE,GAAA,IAAA,MAAA,CAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,CAAA,MAAAD,GAAA,MAAA,CAAA2B,KAAA,QAAAC,IAAA5B,EAAA,CAAA,CAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,CAAA,EAAA,SAAAZ,IAAA,CAAA,SAAAa,IAAA,CAAA,SAAAC,IAAA,CAAA,IAAAC,EAAA,CAAA,EAAApB,EAAAoB,EAAA1B,GAAA,WAAA,OAAA2B,IAAA,IAAA,IAAAC,EAAArC,OAAAsC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAxC,GAAAG,EAAAyB,KAAAY,EAAA9B,KAAA0B,EAAAI,GAAA,IAAAE,EAAAP,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAO,EAAA5C,GAAA,CAAA,OAAA,QAAA,UAAA6C,SAAA,SAAA9C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,OAAAsC,KAAAQ,QAAA/C,EAAAC,EAAA,GAAA,GAAA,CAAA,SAAA+C,EAAA/C,EAAAD,GAAA,SAAAiD,EAAA/C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,GAAA,UAAAO,EAAAc,KAAA,CAAA,IAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAmB,QAAAnB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAmD,QAAApB,EAAAqB,SAAAC,MAAA,SAAApD,GAAAgD,EAAA,OAAAhD,EAAAS,EAAAE,EAAA,IAAA,SAAAX,GAAAgD,EAAA,QAAAhD,EAAAS,EAAAE,EAAA,IAAAZ,EAAAmD,QAAApB,GAAAsB,MAAA,SAAApD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,IAAA,SAAAf,GAAA,OAAAgD,EAAA,QAAAhD,EAAAS,EAAAE,EAAA,GAAA,CAAAA,EAAAE,EAAAe,IAAA,CAAA,IAAA3B,EAAAK,EAAAgC,KAAA,UAAA,CAAA9B,MAAA,SAAAR,EAAAI,GAAA,SAAAiD,IAAA,OAAA,IAAAtD,GAAA,SAAAA,EAAAE,GAAA+C,EAAAhD,EAAAI,EAAAL,EAAAE,EAAA,GAAA,CAAA,OAAAA,EAAAA,EAAAA,EAAAmD,KAAAC,EAAAA,GAAAA,GAAA,GAAA,CAAA,SAAA5B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,OAAA,SAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAA,IAAAsB,MAAA,gCAAA,GAAAhD,IAAA2B,EAAA,CAAA,GAAA,UAAAxB,EAAA,MAAAE,EAAA,MAAA,CAAAH,MAAAR,EAAAuD,MAAA,EAAA,CAAA,IAAAnD,EAAAoD,OAAA/C,EAAAL,EAAAwB,IAAAjB,IAAA,CAAA,IAAAE,EAAAT,EAAAqD,SAAA,GAAA5C,EAAA,CAAA,IAAAE,EAAA2C,EAAA7C,EAAAT,GAAA,GAAAW,EAAA,CAAA,GAAAA,IAAAmB,EAAA,SAAA,OAAAnB,CAAA,CAAA,CAAA,GAAA,SAAAX,EAAAoD,OAAApD,EAAAuD,KAAAvD,EAAAwD,MAAAxD,EAAAwB,SAAA,GAAA,UAAAxB,EAAAoD,OAAA,CAAA,GAAAlD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAyD,kBAAAzD,EAAAwB,IAAA,KAAA,WAAAxB,EAAAoD,QAAApD,EAAA0D,OAAA,SAAA1D,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,GAAA,WAAAiC,EAAAV,KAAA,CAAA,GAAArB,EAAAF,EAAAmD,KAAAtB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,SAAA,MAAA,CAAA1B,MAAA6B,EAAAT,IAAA2B,KAAAnD,EAAAmD,KAAA,CAAA,UAAAlB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAoD,OAAA,QAAApD,EAAAwB,IAAAS,EAAAT,IAAA,CAAA,CAAA,CAAA,SAAA8B,EAAA3D,EAAAE,GAAA,IAAAG,EAAAH,EAAAuD,OAAAlD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAwD,SAAA,KAAA,UAAArD,GAAAL,EAAAa,SAAA,SAAAX,EAAAuD,OAAA,SAAAvD,EAAA2B,IAAA5B,EAAA0D,EAAA3D,EAAAE,GAAA,UAAAA,EAAAuD,SAAA,WAAApD,IAAAH,EAAAuD,OAAA,QAAAvD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA3D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,GAAA,UAAAnB,EAAAkB,KAAA,OAAA1B,EAAAuD,OAAA,QAAAvD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAwD,SAAA,KAAAvB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA4C,MAAAtD,EAAAF,EAAAiE,YAAArD,EAAAH,MAAAP,EAAAgE,KAAAlE,EAAAmE,QAAA,WAAAjE,EAAAuD,SAAAvD,EAAAuD,OAAA,OAAAvD,EAAA2B,IAAA5B,GAAAC,EAAAwD,SAAA,KAAAvB,GAAAvB,GAAAV,EAAAuD,OAAA,QAAAvD,EAAA2B,IAAA,IAAAmC,UAAA,oCAAA9D,EAAAwD,SAAA,KAAAvB,EAAA,CAAA,SAAAiC,EAAAnE,GAAA,IAAAD,EAAA,CAAAqE,OAAApE,EAAA,IAAA,KAAAA,IAAAD,EAAAsE,SAAArE,EAAA,IAAA,KAAAA,IAAAD,EAAAuE,WAAAtE,EAAA,GAAAD,EAAAwE,SAAAvE,EAAA,IAAAsC,KAAAkC,WAAAC,KAAA1E,EAAA,CAAA,SAAA2E,EAAA1E,GAAA,IAAAD,EAAAC,EAAA2E,YAAA,CAAA,EAAA5E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA2E,WAAA5E,CAAA,CAAA,SAAAyB,EAAAxB,GAAAsC,KAAAkC,WAAA,CAAA,CAAAJ,OAAA,SAAApE,EAAA6C,QAAAsB,EAAA7B,MAAAA,KAAAsC,OAAA,EAAA,CAAA,SAAAlC,EAAA3C,GAAA,GAAAA,GAAA,KAAAA,EAAA,CAAA,IAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,GAAA,mBAAAA,EAAAkE,KAAA,OAAAlE,EAAA,IAAA8E,MAAA9E,EAAA+E,QAAA,CAAA,IAAAxE,GAAA,EAAAG,EAAA,SAAAwD,IAAA,OAAA3D,EAAAP,EAAA+E,QAAA,GAAA1E,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA2D,EAAAzD,MAAAT,EAAAO,GAAA2D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAzD,MAAAR,EAAAiE,EAAAV,MAAA,EAAAU,CAAA,EAAA,OAAAxD,EAAAwD,KAAAxD,CAAA,CAAA,CAAA,MAAA,IAAAsD,UAAAd,QAAAlD,GAAA,mBAAA,CAAA,OAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAqC,EAAA,cAAA,CAAAnC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,cAAA,CAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA4C,YAAA9D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAiF,oBAAA,SAAAhF,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAiF,YAAA,QAAAlF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAAgF,aAAAhF,EAAAmF,MAAA,EAAAnF,EAAAoF,KAAA,SAAAnF,GAAA,OAAAE,OAAAkF,eAAAlF,OAAAkF,eAAApF,EAAAoC,IAAApC,EAAAqF,UAAAjD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAoB,GAAA3C,CAAA,EAAAD,EAAAuF,MAAA,SAAAtF,GAAA,MAAA,CAAAmD,QAAAnD,EAAA,EAAA4C,EAAAG,EAAA5C,WAAAc,EAAA8B,EAAA5C,UAAAU,GAAA,WAAA,OAAAyB,IAAA,IAAAvC,EAAAgD,cAAAA,EAAAhD,EAAAwF,MAAA,SAAAvF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA+E,SAAA,IAAA7E,EAAA,IAAAoC,EAAA1B,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAiF,oBAAA/E,GAAAU,EAAAA,EAAAsD,OAAAb,MAAA,SAAApD,GAAA,OAAAA,EAAAuD,KAAAvD,EAAAQ,MAAAG,EAAAsD,MAAA,GAAA,EAAArB,EAAAD,GAAA1B,EAAA0B,EAAA5B,EAAA,aAAAE,EAAA0B,EAAAhC,GAAA,WAAA,OAAA2B,IAAA,IAAArB,EAAA0B,EAAA,YAAA,WAAA,MAAA,oBAAA,IAAA5C,EAAA0F,KAAA,SAAAzF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,GAAA,IAAA,IAAAG,KAAAL,EAAAE,EAAAwE,KAAArE,GAAA,OAAAH,EAAAyF,UAAA,SAAAzB,IAAA,KAAAhE,EAAA6E,QAAA,CAAA,IAAA9E,EAAAC,EAAA0F,MAAA,GAAA3F,KAAAD,EAAA,OAAAkE,EAAAzD,MAAAR,EAAAiE,EAAAV,MAAA,EAAAU,CAAA,CAAA,OAAAA,EAAAV,MAAA,EAAAU,CAAA,CAAA,EAAAlE,EAAA2C,OAAAA,EAAAlB,EAAArB,UAAA,CAAA8E,YAAAzD,EAAAoD,MAAA,SAAA7E,GAAA,GAAAuC,KAAAsD,KAAA,EAAAtD,KAAA2B,KAAA,EAAA3B,KAAAqB,KAAArB,KAAAsB,MAAA5D,EAAAsC,KAAAiB,MAAA,EAAAjB,KAAAmB,SAAA,KAAAnB,KAAAkB,OAAA,OAAAlB,KAAAV,IAAA5B,EAAAsC,KAAAkC,WAAA3B,QAAA6B,IAAA3E,EAAA,IAAA,IAAAE,KAAAqC,KAAA,MAAArC,EAAA4F,OAAA,IAAAzF,EAAAyB,KAAAS,KAAArC,KAAA4E,OAAA5E,EAAA6F,MAAA,MAAAxD,KAAArC,GAAAD,EAAA,EAAA+F,KAAA,WAAAzD,KAAAiB,MAAA,EAAA,IAAAvD,EAAAsC,KAAAkC,WAAA,GAAAG,WAAA,GAAA,UAAA3E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,OAAAU,KAAA0D,IAAA,EAAAnC,kBAAA,SAAA9D,GAAA,GAAAuC,KAAAiB,KAAA,MAAAxD,EAAA,IAAAE,EAAAqC,KAAA,SAAA2D,EAAA7F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAAgE,KAAA7D,EAAAE,IAAAL,EAAAuD,OAAA,OAAAvD,EAAA2B,IAAA5B,KAAAM,CAAA,CAAA,IAAA,IAAAA,EAAAgC,KAAAkC,WAAAM,OAAA,EAAAxE,GAAA,IAAAA,EAAA,CAAA,IAAAG,EAAA6B,KAAAkC,WAAAlE,GAAAK,EAAAF,EAAAkE,WAAA,GAAA,SAAAlE,EAAA2D,OAAA,OAAA6B,EAAA,OAAA,GAAAxF,EAAA2D,QAAA9B,KAAAsD,KAAA,CAAA,IAAA/E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,cAAA,GAAAI,GAAAE,EAAA,CAAA,GAAAuB,KAAAsD,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,GAAA,GAAA/B,KAAAsD,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,WAAA,MAAA,GAAAzD,GAAA,GAAAyB,KAAAsD,KAAAnF,EAAA4D,SAAA,OAAA4B,EAAAxF,EAAA4D,UAAA,OAAA,CAAA,IAAAtD,EAAA,MAAA,IAAAuC,MAAA,0CAAA,GAAAhB,KAAAsD,KAAAnF,EAAA6D,WAAA,OAAA2B,EAAAxF,EAAA6D,WAAA,CAAA,CAAA,CAAA,EAAAR,OAAA,SAAA9D,EAAAD,GAAA,IAAA,IAAAE,EAAAqC,KAAAkC,WAAAM,OAAA,EAAA7E,GAAA,IAAAA,EAAA,CAAA,IAAAK,EAAAgC,KAAAkC,WAAAvE,GAAA,GAAAK,EAAA8D,QAAA9B,KAAAsD,MAAAxF,EAAAyB,KAAAvB,EAAA,eAAAgC,KAAAsD,KAAAtF,EAAAgE,WAAA,CAAA,IAAA7D,EAAAH,EAAA,KAAA,CAAA,CAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA2D,QAAArE,GAAAA,GAAAU,EAAA6D,aAAA7D,EAAA,MAAA,IAAAE,EAAAF,EAAAA,EAAAkE,WAAA,CAAA,EAAA,OAAAhE,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA6B,KAAAkB,OAAA,OAAAlB,KAAA2B,KAAAxD,EAAA6D,WAAApC,GAAAI,KAAA4D,SAAAvF,EAAA,EAAAuF,SAAA,SAAAlG,EAAAD,GAAA,GAAA,UAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,MAAA,UAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAAW,KAAA2B,KAAAjE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAAW,KAAA0D,KAAA1D,KAAAV,IAAA5B,EAAA4B,IAAAU,KAAAkB,OAAA,SAAAlB,KAAA2B,KAAA,OAAA,WAAAjE,EAAA2B,MAAA5B,IAAAuC,KAAA2B,KAAAlE,GAAAmC,CAAA,EAAAiE,OAAA,SAAAnG,GAAA,IAAA,IAAAD,EAAAuC,KAAAkC,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,CAAA,IAAAE,EAAAqC,KAAAkC,WAAAzE,GAAA,GAAAE,EAAAqE,aAAAtE,EAAA,OAAAsC,KAAA4D,SAAAjG,EAAA0E,WAAA1E,EAAAsE,UAAAG,EAAAzE,GAAAiC,CAAA,CAAA,EAAAkE,MAAA,SAAApG,GAAA,IAAA,IAAAD,EAAAuC,KAAAkC,WAAAM,OAAA,EAAA/E,GAAA,IAAAA,EAAA,CAAA,IAAAE,EAAAqC,KAAAkC,WAAAzE,GAAA,GAAAE,EAAAmE,SAAApE,EAAA,CAAA,IAAAI,EAAAH,EAAA0E,WAAA,GAAA,UAAAvE,EAAAuB,KAAA,CAAA,IAAArB,EAAAF,EAAAwB,IAAA8C,EAAAzE,EAAA,CAAA,OAAAK,CAAA,CAAA,CAAA,MAAA,IAAAgD,MAAA,wBAAA,EAAA+C,cAAA,SAAAtG,EAAAE,EAAAG,GAAA,OAAAkC,KAAAmB,SAAA,CAAA7C,SAAA8B,EAAA3C,GAAAiE,WAAA/D,EAAAiE,QAAA9D,GAAA,SAAAkC,KAAAkB,SAAAlB,KAAAV,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,CAAA,SAAAkD,QAAA3C,GAAA,OAAA2C,QAAA,mBAAAvC,QAAA,iBAAAA,OAAAE,SAAA,SAAAN,GAAA,cAAAA,CAAA,EAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAI,QAAAJ,EAAA2E,cAAAvE,QAAAJ,IAAAI,OAAAP,UAAA,gBAAAG,CAAA,EAAA2C,QAAA3C,EAAA,CAAA,SAAAgG,mBAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAAC,EAAA/E,GAAA,IAAA,IAAAgF,EAAAL,EAAAI,GAAA/E,GAAApB,EAAAoG,EAAApG,KAAA,CAAA,MAAAqG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAArD,KAAAL,EAAA1C,GAAAgF,QAAAtC,QAAA1C,GAAA4C,KAAAqD,EAAAC,EAAA,CAAA,SAAAI,kBAAAC,GAAA,OAAA,WAAA,IAAAC,EAAA1E,KAAA2E,EAAAC,UAAA,OAAA,IAAA1B,SAAA,SAAAtC,EAAAsD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAAjG,GAAA8F,mBAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAA,OAAAlG,EAAA,CAAA,SAAAkG,EAAAU,GAAAd,mBAAAC,EAAArD,EAAAsD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,GAAA,CAAA,CAAAC,QAAA,SAAAvH,EAAAC,EAAAI,EAAAH,GAAA,SAAAgC,EAAA3B,EAAAS,GAAA,IAAAX,EAAAE,GAAA,CAAA,IAAAN,EAAAM,GAAA,CAAA,IAAAK,EAAA,mBAAA2G,SAAAA,QAAA,IAAAvG,GAAAJ,EAAA,OAAAA,EAAAL,GAAA,GAAA,GAAAG,EAAA,OAAAA,EAAAH,GAAA,GAAA,IAAA0B,EAAA,IAAAsB,MAAA,uBAAAhD,EAAA,KAAA,MAAA0B,EAAAuF,KAAA,mBAAAvF,CAAA,CAAA,IAAAD,EAAA3B,EAAAE,GAAA,CAAAkH,QAAA,CAAA,GAAAxH,EAAAM,GAAA,GAAAuB,KAAAE,EAAAyF,SAAA,SAAAzH,GAAA,IAAAK,EAAAJ,EAAAM,GAAA,GAAAP,GAAA,OAAAkC,EAAA7B,GAAAL,EAAA,GAAAgC,EAAAA,EAAAyF,QAAAzH,EAAAC,EAAAI,EAAAH,EAAA,CAAA,OAAAG,EAAAE,GAAAkH,OAAA,CAAA,IAAA,IAAA/G,EAAA,mBAAA6G,SAAAA,QAAAhH,EAAA,EAAAA,EAAAL,EAAA6E,OAAAxE,IAAA2B,EAAAhC,EAAAK,IAAA,OAAA2B,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAAqF,EAAAG,EAAAD,IAAA,SAAAE,ID4BiB,WEvBjB,IA0BAC,EA1BAC,EAAAN,EAAA,KACAO,EAAAP,EAAA,KACAQ,EAAAR,EAAA,KACAS,EAAAT,EAAA,KACAU,EAAAV,EAAA,IAAAW,QAEAC,EAAAZ,EAAA,GAEAa,EAAAP,EAAA,iBACAQ,EAAAR,EAAA,4BACAS,EAAAT,EAAA,4BACAU,EAAAV,EAAA,4CACAW,EAAAX,EAAA,gCACAY,EAAAZ,EAAA,mCACAa,EAAAD,EAAAE,KAAA,gCACAT,EAAA,IAAAD,EAAAJ,GAEAe,EAAA,IAAAb,EAAAc,OAAAC,SAAAC,MAAA,SAAAC,GAAA,OACAhB,EAAAiB,MAAAD,EAAA,CAAAE,mBAAA,GADA,WAKAN,EAAAI,MAAAG,8BACAP,EAAAI,MAAAI,uBACAR,EAAAI,MAAAK,WAIA,IAAAC,EAAA,CACAC,oBAAA,CACA,MAAA,gBACA,MAAA,gBACA,MAAA,gBACA,OAAA,iBACA,KAAA,gBAEAC,KAAA,CACA,MAAA,qBACA,MAAA,qBACA,MAAA,qBACA,OAAA,sBACA,KAAA,sBAIA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAnB,EAAAE,KAAA,kBAAAkB,MACA,GAAA,iBAAAhB,OAAAiB,UACA,MAAA,IAAAvG,MAAA,8CACA,IAAA+F,EAAAT,OAAAiB,WACA,MAAA,IAAAvG,MAAA,aAAAwG,OAAAlB,OAAAiB,UAAA,qBACA,IAAAR,EAAAT,OAAAiB,WAAAF,GACA,MAAA,IAAArG,MAAA,aAAAwG,OACAlB,OAAAiB,UAAA,oCAAAC,OAAAH,EAAA,MAEA,IAAAI,EAAA,CACAC,OAAA,eACAC,QAAAZ,EAAAT,OAAAiB,WAAAF,GACAO,WAAA,CACAC,cAAAvB,OAAAwB,KAAAC,OAEAC,oBAAA,CACAC,WAAA,gBACAC,oBAAA,cACAC,YAAA,gBACAC,eAAA,CACAC,eAAA,SACAC,gBAAA,8BAEAC,WAAAjC,OAAAC,SAAAC,KACAgC,QAAA,iBAAA,oBACAA,QAAA,UAAA,cAMA,OADAlC,OAAAmC,kBAAAhB,EAAAiB,WAAApC,OAAAmC,iBACArB,EAAAuB,aAAA1J,OAAAwI,EAhCA,CAAA,SAmCAmB,IAAA,OAAAC,EAAAhE,MAAA7E,KAAA4E,UAAA,CAAA,SAAAiE,IAAA,OAAAA,EAAArE,kBAAAhH,sBAAAqF,MAAA,SAAAiG,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAzL,sBAAAuB,MAAA,SAAAmK,GAAA,cAAAA,EAAA5F,KAAA4F,EAAAvH,MAAA,KAAA,EACA,OAAAoH,EAAAtD,EAAAiB,MAAAb,EAAAsD,aAAAD,EAAAvH,KAAA,EACAiE,EAAAmD,GAAA,KAAA,EAAA,KAAAC,EAAAE,EAAA7H,MAGAyD,IAAA,CAAAoE,EAAAvH,KAAA,EAAA,KAAA,CAAA,MAEA4D,EAAA6D,KAAA9C,OAAA+C,OAAA9E,MAAAyE,EAAAlE,IAAAmE,QAAA,SAGAD,EAAAlE,IAAA,KAAA,EAAA,GAQA,WAAAnE,QAAAqI,EAAAD,OACA,OAAAC,EAAAD,MACA,iBAAAC,EAAAD,KAAAO,QAHA,CAAAJ,EAAAvH,KAAA,EAAA,KAAA,CAAA,OAAAuH,EAAA1H,OAAA,SAKAwH,EAAAD,KAAAO,SAAA,KAAA,EAtBA,MAyBAL,EACAD,EAAAO,YACAP,EAAAQ,MACA,qCAEA7D,EAAA8D,OAEAlE,EAAA6D,KAAA9C,OAAA+C,OAAA9E,MAAA0E,EAAA,SACA,IAAAjI,MAAAiI,GAAA,KAAA,GAAA,IAAA,MAAA,OAAAC,EAAAzF,OAAA,GAAAqF,EAAA,MAjCAjE,MAAA7E,KAAA4E,UAAA,CAqGA,SAAA8E,IACA,IAAAC,EAAArE,EAAA,wCAAAgC,MACAsC,EACAtE,EAAA,4CAAA9C,OAAA,EACA8C,EAAA,oDAAAgC,MACAhC,EAAA,6CAAAgC,MACAuC,EAAAvE,EAAA,yCAEA,GAAA,gBAAAqE,EAaA,OAVAtE,GAAAA,EAAAyE,QAGAD,EAAAE,KAAA,YAAA,GAGAhE,EAAAiE,SAAA,eAGAlE,EAAAmE,YAAA,UAIA,GAAA,WAAAN,EAAA,CACA,IAAArD,OAAA4D,OAOA,OANA3E,EAAA6D,KAAA9C,OAAA+C,OAAA9E,MAAA+B,OAAA6D,kBAAA,SACA7E,EAAA,qDAAAyE,KACA,WACA,QAEAzE,EAAA,gDAAAyE,KAAA,WAAA,GAKAF,EAAAE,KAAA,YAAA,GAGAjE,EAAAkE,SAAA,UAGAjE,EAAAkE,YAAA,UAGA5E,IAEAA,EAAAyE,QAEAzE,EAAA,MAOA,IAAA+E,EAAA,CAEAC,MAAA,CACAC,MAAA,SAEAC,QAAA,SAAAzF,GACAS,EAAA6D,KAAA9C,OAAA+C,OAAA9E,MAAAO,EAAAmE,QAAA,SACAuB,QAAAjG,MAAAO,EAFA,EAQAsF,UAAA,SAAAjD,GACAxB,EAAA8E,OACAtD,EAAAuD,eACArE,EAAAI,MAAAG,uBAAAO,EAAAuD,eACAvD,EAAAmC,UAAAjD,EAAAI,MAAAI,gBAAAM,EAAAmC,SACAhD,OAAAC,SAAAF,EAAAsE,UAAA,SAAAlE,GAAA,OACAhB,EAAAmF,UAAAnE,EAAA,CAAAoE,gBAAA,EAAAC,OAAA,WADA,GALA,GAUA,iBAAAlB,EACAQ,EAAAW,mBAAA7D,EACAkD,EAAAY,YAAApC,GAIAvD,EAAAiB,OAAA4D,OAAAe,QAAAb,IACAc,OAAA,2BA9DA,CAxBA,CA/DArF,EAAAsF,GAAA,SAAA,WAAA,IAAAC,EAAA5G,kBAAAhH,sBAAAqF,MAAA,SAAAwI,EAAAC,GAAA,IAAAvC,EAAAC,EAAA,OAAAxL,sBAAAuB,MAAA,SAAAwM,GAAA,cAAAA,EAAAjI,KAAAiI,EAAA5J,MAAA,KAAA,EAIA,OAJA4J,EAAAjI,KAAA,EAEAgI,EAAAE,iBACA7F,EAAA8E,OACA1B,EAAAtD,EAAAiB,MAAApB,EAAAtF,MAAAmJ,aAAAoC,EAAA5J,KAAA,EACAiE,EAAAmD,GAAA,KAAA,EAAA,KAAAC,EAAAuC,EAAAlK,MAGAyD,IAAA,CAAAyG,EAAA5J,KAAA,EAAA,KAAA,CAAA,MAAAqH,EAAAlE,IAAA,KAAA,EAAA,GAKA,WAAAnE,QAAAqI,EAAAD,OACA,iBAAAC,EAAAD,KAAA0C,WAFA,CAAAF,EAAA5J,KAAA,GAAA,KAAA,CAGA,OACA2E,OAAAC,SAAAyC,EAAAD,KAAA0C,WADAF,EAAA/J,OAAA,UAAA,KAAA,GAAA,GAOA,WAAAb,QAAAqI,EAAAD,OACA,OAAAC,EAAAD,OAEA,iBAAAC,EAAAD,KAAA2C,WACA,iBAAA1C,EAAAD,KAAA4C,WALA,CAAAJ,EAAA5J,KAAA,GAAA,KAAA,CAAA,MAQA,IAAAX,MACAgI,EAAAO,YACAP,EAAAQ,MACA,sCAHA,KAAA,GAAA+B,EAAA5J,KAAA,GAAA,MAAA,KAAA,GAAA4J,EAAAjI,KAAA,GAAAiI,EAAAK,GAAAL,EAAA,MAAA,GAMA5F,EAAA8D,OACAlE,EAAA6D,KAAA9C,OAAA+C,OAAA9E,MAAAgH,EAAAK,GAAA3C,QAAA,SAFA,KAAA,GAAA,IAAA,MAAA,OAAAsC,EAAA9H,OAAA,GAAA4H,EAAArL,KAAA,CAAA,CAAA,EAAA,KAAA,KAlCA,OAAA,SAAA6L,GAAA,OAAAT,EAAAvG,MAAA7E,KAAA4E,UAAA,CAAA,CAAA,IA0CAoB,EAAAmF,GAAA,UAAA,WACA,IAAAW,EAAA,iBAAAxG,EAAAtF,MAAAsH,MACAnB,EAAA4D,KAAA,WAAA+B,GAIAA,GACA,CAAA,KAAA,MAAAC,SAAA7F,EAAAE,KAAA,kBAAAkB,QAEApB,EAAAoB,IAAA,MAGAoC,GAZA,IAmBAzD,EAAAkF,GAAA,SAAAzB,EFGiB,GAACnK,KAAKS,KACV,GAACT,KAAKS,KAAMgF,EAAQ,KC5LjC,EAAA,CD+LY,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,IAAO,IACP,GAAM,GACN,EAAK,KCrMjB,CAAA,EAAA,CAAA","file":"billing.js","sourcesContent":["require = function e(t, n, r) {\n    function s(o, u) {\n        if (!n[o]) {\n            if (!t[o]) {\n                var a = typeof require == 'function' && require;\n                if (!u && a)\n                    return a(o, !0);\n                if (i)\n                    return i(o, !0);\n                var f = new Error('Cannot find module \\'' + o + '\\'');\n                throw f.code = 'MODULE_NOT_FOUND', f;\n            }\n            var l = n[o] = { exports: {} };\n            t[o][0].call(l.exports, function (e) {\n                var n = t[o][1][e];\n                return s(n ? n : e);\n            }, l, l.exports, e, t, n, r);\n        }\n        return n[o].exports;\n    }\n    var i = typeof require == 'function' && require;\n    for (var o = 0; o < r.length; o++)\n        s(r[o]);\n    return s;\n}({\n    2: [\n        function (require, module, exports) {\n            (function (process) {\n                (function () {\n                    const $ = require(131);\n                    const Swal = require(182);\n                    const URLParse = require(187);\n                    const qs = require(151);\n                    const {spinner: Spinner} = require(24);\n                    const sendRequest = require(8);\n                    const $formBilling = $('#form-billing');\n                    const $stripeButtonContainer = $('#stripe-button-container');\n                    const $paypalButtonContainer = $('#paypal-button-container');\n                    const $paymentType = $('input[name=\"payment_type\"][type=\"radio\"]');\n                    const $paymentMethod = $('input[name=\"payment_method\"]');\n                    const $paymentDuration = $('select[name=\"payment_duration\"]');\n                    const $opts = $paymentDuration.find('option[data-no-subscription]');\n                    const spinner = new Spinner($);\n                    const url = new URLParse(window.location.href, query => qs.parse(query, { ignoreQueryPrefix: true }));\n                    delete url.query.paypal_subscription_id;\n                    delete url.query.paypal_order_id;\n                    delete url.query.session_id;\n                    let button;\n                    const PAYPAL_MAPPING = {\n                        enhanced_protection: {\n                            '30d': \"fake_plan_30d\",\n                            '60d': \"fake_plan_60d\",\n                            '90d': \"fake_plan_90d\",\n                            '180d': \"fake_plan_180d\",\n                            '1y': \"fake_plan_1y\"\n                        },\n                        team: {\n                            '30d': \"fake_team_plan_30d\",\n                            '60d': \"fake_team_plan_60d\",\n                            '90d': \"fake_team_plan_90d\",\n                            '180d': \"fake_team_plan_180d\",\n                            '1y': \"fake_team_plan_1y\"\n                        }\n                    };\n                    function createPayPalSubscription(data, actions) {\n                        const duration = $paymentDuration.find('option:checked').val();\n                        if (typeof window.USER_PLAN !== 'string')\n                            throw new Error('\"plan\" key missing from parsed querystring');\n                        if (!PAYPAL_MAPPING[window.USER_PLAN])\n                            throw new Error(`The plan \"${ window.USER_PLAN }\" does not exist`);\n                        if (!PAYPAL_MAPPING[window.USER_PLAN][duration])\n                            throw new Error(`The plan \"${ window.USER_PLAN }\" does not have a duration for \"${ duration }\"`);\n                        const options = {\n                            intent: 'subscription',\n                            plan_id: PAYPAL_MAPPING[window.USER_PLAN][duration],\n                            subscriber: { email_address: window.USER.email },\n                            application_context: {\n                                brand_name: 'Forward Email',\n                                shipping_preference: 'NO_SHIPPING',\n                                user_action: 'SUBSCRIBE_NOW',\n                                payment_method: {\n                                    payer_selected: 'PAYPAL',\n                                    payee_preferred: 'IMMEDIATE_PAYMENT_REQUIRED'\n                                },\n                                cancel_url: window.location.href.replace('localhost:3000', 'forwardemail.net').replace('http://', 'https://')\n                            }\n                        };\n                        if (window.PLAN_EXPIRES_AT)\n                            options.start_time = window.PLAN_EXPIRES_AT;\n                        return actions.subscription.create(options);\n                    }\n                    async function createPayPalOrder() {\n                        const body = qs.parse($formBilling.serialize());\n                        const response = await sendRequest(body);\n                        if (response.err) {\n                            Swal.fire(window._types.error, response.err.message, 'error');\n                            throw response.err;\n                        }\n                        if (typeof response.body === 'object' && response.body !== null && typeof response.body.orderID === 'string')\n                            return response.body.orderID;\n                        const message = response.statusText || response.text || 'Invalid response, please try again';\n                        spinner.hide();\n                        Swal.fire(window._types.error, message, 'error');\n                        throw new Error(message);\n                    }\n                    $formBilling.on('submit', async function (ev) {\n                        try {\n                            ev.preventDefault();\n                            spinner.show();\n                            const body = qs.parse($(this).serialize());\n                            const response = await sendRequest(body);\n                            if (response.err)\n                                throw response.err;\n                            if (typeof response.body === 'object' && typeof response.body.redirectTo === 'string') {\n                                window.location = response.body.redirectTo;\n                                return;\n                            }\n                            if (typeof response.body !== 'object' || response.body === null || !(typeof response.body.sessionId === 'string' || typeof response.body.invoiceId === 'string'))\n                                throw new Error(response.statusText || response.text || 'Invalid response, please try again');\n                        } catch (err) {\n                            spinner.hide();\n                            Swal.fire(window._types.error, err.message, 'error');\n                        }\n                    });\n                    $paymentType.on('change', function () {\n                        const isSubscription = $(this).val() === 'subscription';\n                        $opts.prop('disabled', isSubscription);\n                        if (isSubscription && [\n                                '2y',\n                                '3y'\n                            ].includes($paymentDuration.find('option:checked').val()))\n                            $paymentDuration.val('1y');\n                        updatePayButtons();\n                    });\n                    $paymentMethod.on('change', updatePayButtons);\n                    function updatePayButtons() {\n                        const paymentMethod = $('input[name=\"payment_method\"]:checked').val();\n                        const paymentType = $('input[name=\"payment_type\"][type=\"radio\"]').length > 0 ? $('input[name=\"payment_type\"][type=\"radio\"]:checked').val() : $('input[name=\"payment_type\"][type=\"hidden\"]').val();\n                        const $subscriptionInput = $('input#input-payment-type-subscription');\n                        if (paymentMethod === 'credit_card') {\n                            if (button)\n                                button.close();\n                            $subscriptionInput.prop('disabled', false);\n                            $paypalButtonContainer.addClass('d-none');\n                            $stripeButtonContainer.removeClass('d-none');\n                            return;\n                        }\n                        if (paymentMethod === 'paypal') {\n                            if (!window.paypal) {\n                                Swal.fire(window._types.error, window.PAYPAL_NOT_LOADED, 'error');\n                                $('input[name=\"payment_method\"][value=\"credit_card\"]').prop('checked', true);\n                                $('input[name=\"payment_method\"][value=\"paypal\"]').prop('checked', false);\n                                return;\n                            }\n                            $subscriptionInput.prop('disabled', false);\n                            $stripeButtonContainer.addClass('d-none');\n                            $paypalButtonContainer.removeClass('d-none');\n                            if (button) {\n                                button.close();\n                                button = null;\n                            }\n                            const props = {\n                                style: { color: 'black' },\n                                onError(err) {\n                                    Swal.fire(window._types.error, err.message, 'error');\n                                    console.error(err);\n                                }\n                            };\n                            props.onApprove = function (data) {\n                                spinner.show();\n                                if (data.subscriptionID)\n                                    url.query.paypal_subscription_id = data.subscriptionID;\n                                else if (data.orderID)\n                                    url.query.paypal_order_id = data.orderID;\n                                window.location = url.toString(query => qs.stringify(query, {\n                                    addQueryPrefix: true,\n                                    format: 'RFC1738'\n                                }));\n                            };\n                            if (paymentType === 'subscription')\n                                props.createSubscription = createPayPalSubscription;\n                            else\n                                props.createOrder = createPayPalOrder;\n                            button = window.paypal.Buttons(props);\n                            button.render('#paypal-button-container');\n                        }\n                    }\n                }.call(this));\n            }.call(this, require(149)));\n        },\n        {\n            '131': 131,\n            '149': 149,\n            '151': 151,\n            '182': 182,\n            '187': 187,\n            '24': 24,\n            '8': 8\n        }\n    ]\n}, {}, [2]);","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Copyright (c) Forward Email LLC\n * SPDX-License-Identifier: BUSL-1.1\n */\n\nconst $ = require('jquery');\nconst Swal = require('sweetalert2/dist/sweetalert2.js');\nconst URLParse = require('url-parse');\nconst qs = require('qs');\nconst { spinner: Spinner } = require('@ladjs/assets');\n\nconst sendRequest = require('./send-request');\n\nconst $formBilling = $('#form-billing');\nconst $stripeButtonContainer = $('#stripe-button-container');\nconst $paypalButtonContainer = $('#paypal-button-container');\nconst $paymentType = $('input[name=\"payment_type\"][type=\"radio\"]');\nconst $paymentMethod = $('input[name=\"payment_method\"]');\nconst $paymentDuration = $('select[name=\"payment_duration\"]');\nconst $opts = $paymentDuration.find('option[data-no-subscription]');\nconst spinner = new Spinner($);\n\nconst url = new URLParse(window.location.href, (query) =>\n  qs.parse(query, { ignoreQueryPrefix: true })\n);\n\n// clean up URL if needed\ndelete url.query.paypal_subscription_id;\ndelete url.query.paypal_order_id;\ndelete url.query.session_id;\n\nlet button;\n\nconst PAYPAL_MAPPING = {\n  enhanced_protection: {\n    '30d': process.env.PAYPAL_ENHANCED_PLAN_30D,\n    '60d': process.env.PAYPAL_ENHANCED_PLAN_60D,\n    '90d': process.env.PAYPAL_ENHANCED_PLAN_90D,\n    '180d': process.env.PAYPAL_ENHANCED_PLAN_180D,\n    '1y': process.env.PAYPAL_ENHANCED_PLAN_1Y\n  },\n  team: {\n    '30d': process.env.PAYPAL_TEAM_PLAN_30D,\n    '60d': process.env.PAYPAL_TEAM_PLAN_60D,\n    '90d': process.env.PAYPAL_TEAM_PLAN_90D,\n    '180d': process.env.PAYPAL_TEAM_PLAN_180D,\n    '1y': process.env.PAYPAL_TEAM_PLAN_1Y\n  }\n};\n\nfunction createPayPalSubscription(data, actions) {\n  const duration = $paymentDuration.find('option:checked').val();\n  if (typeof window.USER_PLAN !== 'string')\n    throw new Error('\"plan\" key missing from parsed querystring');\n  if (!PAYPAL_MAPPING[window.USER_PLAN])\n    throw new Error(`The plan \"${window.USER_PLAN}\" does not exist`);\n  if (!PAYPAL_MAPPING[window.USER_PLAN][duration])\n    throw new Error(\n      `The plan \"${window.USER_PLAN}\" does not have a duration for \"${duration}\"`\n    );\n  const options = {\n    intent: 'subscription',\n    plan_id: PAYPAL_MAPPING[window.USER_PLAN][duration],\n    subscriber: {\n      email_address: window.USER.email\n    },\n    application_context: {\n      brand_name: 'Forward Email',\n      shipping_preference: 'NO_SHIPPING',\n      user_action: 'SUBSCRIBE_NOW',\n      payment_method: {\n        payer_selected: 'PAYPAL',\n        payee_preferred: 'IMMEDIATE_PAYMENT_REQUIRED'\n      },\n      cancel_url: window.location.href\n        .replace('localhost:3000', 'forwardemail.net')\n        .replace('http://', 'https://')\n    }\n  };\n  // TODO: we need to validate the subscription start_time on the server-side\n  // start time is current time + 1 minute\n  if (window.PLAN_EXPIRES_AT) options.start_time = window.PLAN_EXPIRES_AT; // new Date(Date.now() + 1000 * 60).toISOString()\n  return actions.subscription.create(options);\n}\n\nasync function createPayPalOrder() {\n  const body = qs.parse($formBilling.serialize());\n  const response = await sendRequest(body);\n\n  // Check if any errors occurred\n  if (response.err) {\n    // render an alert\n    Swal.fire(window._types.error, response.err.message, 'error');\n\n    // reject the promise\n    throw response.err;\n  }\n\n  //\n  // Either display a success message, redirect user, or reload page\n  //\n  // Use the same key name for order ID on the client and server\n  if (\n    typeof response.body === 'object' &&\n    response.body !== null &&\n    typeof response.body.orderID === 'string'\n  )\n    return response.body.orderID;\n\n  // Prepare a message\n  const message =\n    response.statusText ||\n    response.text ||\n    'Invalid response, please try again';\n  // Hide the spinner\n  spinner.hide();\n  // Show message\n  Swal.fire(window._types.error, message, 'error');\n  throw new Error(message);\n}\n\n// TODO: ajaxForm from @ladjs/assets should accept a callback function\n// which gets passed as the success callback to optionally do something custom\n$formBilling.on('submit', async function (ev) {\n  try {\n    ev.preventDefault();\n    spinner.show();\n    const body = qs.parse($(this).serialize());\n    const response = await sendRequest(body);\n\n    // Check if any errors occurred\n    if (response.err) throw response.err;\n\n    // If there is a redirection in the body then\n    // we can assume there was an error and redirect the user\n    if (\n      typeof response.body === 'object' &&\n      typeof response.body.redirectTo === 'string'\n    ) {\n      window.location = response.body.redirectTo;\n      return;\n    }\n\n    // Prepare a message if the body is not accurate\n    if (\n      typeof response.body !== 'object' ||\n      response.body === null ||\n      !(\n        typeof response.body.sessionId === 'string' ||\n        typeof response.body.invoiceId === 'string'\n      )\n    )\n      throw new Error(\n        response.statusText ||\n          response.text ||\n          'Invalid response, please try again'\n      );\n  } catch (err) {\n    spinner.hide();\n    Swal.fire(window._types.error, err.message, 'error');\n  }\n});\n\n// prevent user from selecting 2+ years\n// when subscription type is selected\n$paymentType.on('change', function () {\n  const isSubscription = $(this).val() === 'subscription';\n  $opts.prop('disabled', isSubscription);\n\n  // reset to 1y if 1y+\n  if (\n    isSubscription &&\n    ['2y', '3y'].includes($paymentDuration.find('option:checked').val())\n  )\n    $paymentDuration.val('1y');\n\n  // conditionally update buttons\n  updatePayButtons();\n});\n\n// when the user changes payment method to PayPal\n// we need to hide the \"Continue\" button and render\n// that PayPal button instead using their SDK\n// (and subsequently on toggle state switch it back)\n$paymentMethod.on('change', updatePayButtons);\n\nfunction updatePayButtons() {\n  const paymentMethod = $('input[name=\"payment_method\"]:checked').val();\n  const paymentType =\n    $('input[name=\"payment_type\"][type=\"radio\"]').length > 0\n      ? $('input[name=\"payment_type\"][type=\"radio\"]:checked').val()\n      : $('input[name=\"payment_type\"][type=\"hidden\"]').val();\n  const $subscriptionInput = $('input#input-payment-type-subscription');\n\n  if (paymentMethod === 'credit_card') {\n    // destroy the button if we need to\n    // (if button was set this indicates paypal is active)\n    if (button) button.close();\n\n    // enable subscription input\n    $subscriptionInput.prop('disabled', false);\n\n    // hide the other pay containers\n    $paypalButtonContainer.addClass('d-none');\n\n    // show the stripe container\n    $stripeButtonContainer.removeClass('d-none');\n    return;\n  }\n\n  if (paymentMethod === 'paypal') {\n    if (!window.paypal) {\n      Swal.fire(window._types.error, window.PAYPAL_NOT_LOADED, 'error');\n      $('input[name=\"payment_method\"][value=\"credit_card\"]').prop(\n        'checked',\n        true\n      );\n      $('input[name=\"payment_method\"][value=\"paypal\"]').prop('checked', false);\n      return;\n    }\n\n    // enable subscription input\n    $subscriptionInput.prop('disabled', false);\n\n    // hide the other pay containers\n    $stripeButtonContainer.addClass('d-none');\n\n    // show the paypal container\n    $paypalButtonContainer.removeClass('d-none');\n\n    // if the button already exists, then only change it if we need to\n    if (button) {\n      // delete the current button\n      button.close();\n      // set it to null\n      button = null;\n    }\n\n    // render the (appropriate) Smart Payment Button\n    // (we have to do this approach because there's no way to switch between one-time capture and subscription currently)\n    // <https://github.com/paypal/paypal-checkout-components/issues/1176>\n    // <https://developer.paypal.com/docs/checkout/reference/server-integration/set-up-transaction/#on-the-server>\n    const props = {\n      // <https://developer.paypal.com/docs/checkout/integration-features/customize-button/#layout>\n      style: {\n        color: 'black'\n      },\n      onError(err) {\n        Swal.fire(window._types.error, err.message, 'error');\n        console.error(err);\n      }\n    };\n\n    // <https://developer.paypal.com/docs/checkout/integrate/#5-capture-the-transaction>\n    // props.onApprove = function (data, actions) {\n    props.onApprove = function (data) {\n      spinner.show();\n      if (data.subscriptionID)\n        url.query.paypal_subscription_id = data.subscriptionID;\n      else if (data.orderID) url.query.paypal_order_id = data.orderID;\n      window.location = url.toString((query) =>\n        qs.stringify(query, { addQueryPrefix: true, format: 'RFC1738' })\n      );\n    };\n\n    if (paymentType === 'subscription')\n      props.createSubscription = createPayPalSubscription;\n    else props.createOrder = createPayPalOrder;\n\n    // attach it to the container and render it\n    // eslint-disable-next-line new-cap\n    button = window.paypal.Buttons(props);\n    button.render('#paypal-button-container');\n  }\n}\n"]}