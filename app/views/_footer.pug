footer.mt-auto.small.text-monospace
  //-.
    if !isHelp
      .bg-primary.text-center.py-3.border-top.border-themed
        .container
          .row
            if !user
              .col-6
                a.btn.btn-dark(
                  href=l("/register"),
                  role="button",
                  data-toggle="modal-anchor",
                  data-target="#modal-sign-up"
                )
                  = t("Get started")
                  = " "
                  i.fa.fa-fw.fa-angle-double-right.align-middle
            div(class=user ? "col-12" : "col-6")
              a.btn.btn-dark(
                href=l("/help"),
                role=isHelp ? "link" : "button",
                data-target=isHelp ? false : "#modal-help"
              )= t("Need help?")
  .bg-dark.text-white
    .container.py-3.py-md-4.py-lg-5.text-center.text-lg-left
      .d-flex.flex-column.flex-lg-row
        if !isBot(ctx.get('User-Agent'))
          .flex-nowrap.order-3.order-lg-0.d-flex.flex-column.flex-grow-1.mr-lg-3
            .no-js
              hr.d-lg-none.w-100
              .dropdown.dropup
                a#navbar-dropdown-language-btn.btn.btn-sm.btn-outline-light.dropdown-toggle(
                  href=ctx.url,
                  role="button",
                  data-toggle="dropdown",
                  data-boundary="window",
                  aria-haspopup="true",
                  aria-expanded="false"
                )
                  = `${titleize(t(currentLanguage))} ${ctx.locale !== "en" && currentLanguage !== titleize(currentLanguage) ? `(${titleize(currentLanguage)})` : ""}`
                ul#navbar-dropdown-language-ul.dropdown-menu(
                  role="menu",
                  aria-expanded="false",
                  aria-hidden="true",
                  aria-labelledby="navbar-dropdown-language-btn"
                )
                  each language in availableLanguages
                    if language.locale !== locale
                      li: a.dropdown-item(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
            hr.d-lg-none.w-100
            .mt-auto
              a(href="#", aria-label=t("Go to top"))
                noscript
                  img.d-inline-block.mx-lg-auto(
                    src=manifest("img/logo-square.svg"),
                    width=50,
                    height=50,
                    alt="Go to top"
                  )
                img.d-inline-block.mx-lg-auto.lazyload(
                  data-src=manifest("img/logo-square.svg"),
                  width=50,
                  height=50,
                  alt="Go to top"
                )
        //-.
          .flex-wrap.flex-fill.mr-lg-3
            h3.h6.text-uppercase.mb-2= t("Guides")
            ul.list-unstyled.mb-0
              //-.
                li
                  a.d-block.text-light.py-2.py-md-0(
                    href=l('/guides/professional-business-email')
                  )= t('Professional business email')
                li
                  a.d-block.text-light.py-2.py-md-0(
                    href=l('/guides/how-to-setup-business-email')
                  )= t('How to setup business email')
                li
                  a.d-block.text-light.py-2.py-md-0(
                    href=l('/guides/custom-domain-email-service')
                  )= t('Custom domain email service')
                li
                  a.d-block.text-light.py-2.py-md-0(
                    href=l('/guides/free-business-email-address')
                  )= t('Free business email address')
              li
                a.d-block.text-light.py-2.py-md-0(
                  href=l("/guides/send-email-with-custom-domain-smtp")
                )= t("Send Email with Custom Domain")
              li
                a.d-block.text-light.py-2.py-md-0(
                  href=l("/guides/send-mail-as-gmail-custom-domain")
                )= t("Send Mail As with Gmail")
              each provider in nsProviders
                li
                  a.d-block.text-light.py-2.py-md-0(
                    href=domain && domain.name ? l(`/guides/${provider.slug}?domain=${domain.name}`) : l(`/guides/${provider.slug}`)
                  )
                    = provider.name
              li: a.d-block.text-light.py-2.py-md-0(
                href=l("/faq#table-dns-management-by-registrar")
              )= t("Other providers")
          hr.d-lg-none.w-100

        .flex-wrap.flex-fill.mr-lg-3
          hr.d-lg-none.w-100
          h3.h6.text-uppercase.mb-2: a.text-light(href=l("/open-source"))= t("Apps")
          ul.list-unstyled.mb-0.mb-lg-3
            //- Apple
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/apple-email-clients")
            )
              = "Apple"
              != "&reg;"
            //- Windows
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/windows-email-clients")
            )
              = "Windows"
              != "&reg;"
            //- Android
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/android-email-clients")
            )
              i.fa-fw.fab.fa-android
              = " "
              = "Android"
              != "&trade;"
            //- Linux
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/linux-email-clients")
            )
              i.fa-fw.fab.fa-linux
              = " "
              = "Linux"
              != "&reg;"
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/desktop-email-clients")
            )
              i.fa-fw.fas.fa-desktop
              = " "
              = t("Desktop")
            //- Web
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/web-email-clients")
            )
              if ctx.get("User-Agent") && ctx.get("User-Agent").includes("Firefox")
                i.fab.fa-fw.fa-firefox-browser
                = " "
                = "Firefox"
                != "&reg;"
              else if ctx.get("User-Agent") && ctx.get("User-Agent").includes("Safari") && !ctx.get("User-Agent").includes("Chrome")
                = " "
                = "Safari"
                != "&reg;"
              else
                i.fab.fa-fw.fa-chrome
                = " "
                = "Chrome"
                != "&reg;"
            //- Terminal
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/open-source/terminal-email-clients")
            )
              i.fa-fw.fas.fa-terminal
              = " "
              = "Terminal"

          hr.d-lg-none.w-100
          h3.h6.text-uppercase.mb-2: a.text-light(href=l("/guides"))= t("Guides")
          ul.list-unstyled.mb-0.mb-lg-3
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/guides/send-email-with-custom-domain-smtp")
            )
              = t("Send Email with Custom Domain")
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/guides/send-mail-as-gmail-custom-domain")
            )
              = t("Send Mail As with Gmail")
            if isBot(ctx.get('User-Agent'))
              each provider in nsProviders
                li: a.d-block.text-light.py-2.py-md-0(
                  title=striptags(t('How to Setup Email with <span class="notranslate">%s</span>', provider.name)),
                  href=domain && domain.name ? l(`/guides/${provider.slug}?domain=${domain.name}`) : l(`/guides/${provider.slug}`)
                )!= t('How to Setup Email with <span class="notranslate">%s</span>', provider.name)
            else
              li: a.d-block.text-light.py-2.py-md-0(href=l("/guides"))= t("Email Setup Guides")
            li: a.d-block.text-light.py-2.py-md-0(
              href=domain && domain.name ? l(`/guides/port-25-blocked-by-isp-workaround?domain=${domain.name}`) : l("/guides/port-25-blocked-by-isp-workaround")
            )= t("Port 25 blocked by ISP")
          hr.d-lg-none.w-100
          h3.h6.text-uppercase.mb-2: a.text-light(href=l("/resources"))= t("Resources")
          ul.list-unstyled.mb-0
            li: a.d-block.text-light.py-2.py-md-0(href=l("/encrypted-email"))= t("Encrypted Email")
            - let pricingPageHref = domain && domain.name ? l(`/private-business-email?domain=${domain.name}`) : l("/private-business-email");
            if !isBot(ctx.get('User-Agent'))
              - pricingPageHref += "?pricing=true";
            li: a.d-block.text-light.py-2.py-md-0(href=pricingPageHref)
              if isBot(ctx.get('User-Agent'))
                = t("Private Business Email")
              else
                != t("Features &amp; Pricing")
            li: a.d-block.text-light.py-2.py-md-0(
              href=domain && domain.name ? l(`/faq?domain=${domain.name}`) : l("/faq")
            )= t("Frequently Asked Questions")
            if !isBot(ctx.get('User-Agent'))
              li: a.d-block.text-light.py-2.py-md-0(
                href=l("/help"),
                role=isHelp ? "link" : "button",
                data-target=isHelp ? false : "#modal-help"
              )= t("Help")
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/disposable-addresses")
            )= t("Disposable Addresses")
            li: a.d-block.text-light.py-2.py-md-0(href=l("/domain-registration"))= t("Domain Registration")
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/reserved-email-addresses")
            )= t("Reserved Email Addresses")
            if !isBot(ctx.get('User-Agent'))
              li: a.d-block.text-light.py-2.py-md-0(href=l("/denylist"))= t("Denylist Removal")
        hr.d-lg-none.w-100
        .flex-wrap.flex-fill.mr-lg-3
          h3.h6.text-uppercase.mb-2: a.text-light(href=l("/docs"))= t("Developers")
          ul.list-unstyled.mb-0.mb-lg-3
            li: a.d-block.text-light.py-2.py-md-0(href=l("/email-api"))= t("Email API Reference")
            li: a.d-block.text-light.py-2.py-md-0(href=l("/free-email-webhooks"))= t("Free Email Webhooks")
            li: a.d-block.text-light.py-2.py-md-0(
              href=l("/email-forwarding-regex-pattern-filter")
            )= t("Regex Email Forwarding")
            if platforms.length > 0
              li: a.d-block.text-light.py-2.py-md-0(href=l("/open-source"))= t("Open Source")
          if developerDocs.length > 0
            hr.d-lg-none.w-100
            h3.h6.text-uppercase.mb-2= t("Code Examples")
            hr.d-none.d-md-none.d-lg-none.w-100
            ul.list-unstyled.mb-0.mb-lg-3
              each doc in developerDocs
                li
                  a.d-block.text-light.py-2.py-md-0(href=l(doc.slug))
                    if !isBot(ctx.get('User-Agent')) && doc.icon
                      i(class=doc.icon)
                      = " "
                    = t(doc.title)
          if platforms.length > 0 && isBot(ctx.get('User-Agent'))
            hr.d-lg-none.w-100
            h3.h6.text-uppercase.mb-2: a.text-light(href=l("/open-source"))= t("Open Source Email Clients and Servers")
            ul.list-unstyled.mb-0.mb-lg-3
              - const tools = [];
              - const list = Object.keys(config.meta).filter((key) => key !== "/open-source" && key.startsWith("/open-source"));
              each item in list
                - const match = config.meta[item];
                if match
                  - tools.push({ title: match[0].replace(config.metaTitleAffix, ""), description: match[1], slug: item });
              each tool in tools
                a.d-block.text-light.py-2.py-md-0(
                  href=l(tool.slug),
                  title=striptags(t(tool.title))
                )!= t(tool.title)
        hr.d-lg-none.w-100
        .flex-wrap.flex-fill.d-flex.flex-column
          div
            h3.h6.text-uppercase.mb-2= t("Community")
            ul.list-unstyled.mb-0.mb-lg-3
              li
                a.d-block.text-light.py-2.py-md-0(
                  href="https://github.com/forwardemail",
                  target="_blank",
                  rel="noopener noreferrer",
                  data-toggle="tooltip",
                  data-title=t("100% open-source software"),
                  data-placement="bottom"
                )
                  = "GitHub"
                  = " "
                  i.fa.fa-fw.fa-github
              li
                a.d-block.text-light.py-2.py-md-0(
                  href="https://youtube.com/forwardemail",
                  target="_blank",
                  rel="noopener noreferrer",
                  data-toggle="tooltip",
                  data-title=t("Watch our YouTube channel"),
                  data-placement="bottom"
                )
                  = "YouTube"
                  = " "
                  i.fab.fa-fw.fa-youtube.text-danger
            hr.d-lg-none.w-100
            h3.h6.text-uppercase.mb-2= t("Company")
            ul.list-unstyled.mb-0.mb-lg-3
              li: a.d-block.text-light.py-2.py-md-0(href=l("/about"))= t("About")
              li: a.d-block.text-light.py-2.py-md-0(href=l("/privacy"))= t("Privacy")
              li: a.d-block.text-light.py-2.py-md-0(href=l("/terms"))= t("Terms")
              li: a.d-block.text-light.py-2.py-md-0(
                href=`mailto:careers@${config.supportEmail.split('@')[1]}`,
                target="_blank",
                rel="noopener noreferrer",
                data-toggle="tooltip",
                data-title=t("Send us an email"),
                data-placement="bottom"
              )= t("Careers")
              li: a.d-block.text-light.py-2.py-md-0(
                href="https://github.com/forwardemail/forwardemail.net/security/policy",
                target="_blank",
                rel="noopener noreferrer",
                data-toggle="tooltip",
                data-title=t("Read our policy"),
                data-placement="bottom"
              )= t("Security Policy")
              li: a.d-block.text-light.py-2.py-md-0(href=l("/report-abuse"))= t("Report Abuse")
              if !isBot(ctx.get('User-Agent'))
                li: a.d-block.text-light.py-2.py-md-0(
                  href="https://status.forwardemail.net/",
                  target="_blank",
                  rel="noopener noreferrer",
                  data-toggle="tooltip",
                  data-title=statusOutage ? t("Issue Detected") : t("100% Systems Online"),
                  data-placement="bottom"
                )
                  = t("Status Page")
                  = " "
                  if statusOutage
                    span.badge.badge-pill.badge-warning.text-monospace= t("Issue")
                  else
                    span.badge.badge-pill.badge-success.text-monospace= t("100%")
              if !isBot(ctx.get('User-Agent'))
                li.small: a.d-block.text-light.font-weight-bold.py-2.py-md-0.text-monospace.small.mt-2(
                  href=`mailto:${config.supportEmail}`,
                  target="_blank",
                  rel="noopener noreferrer",
                  data-toggle="tooltip",
                  data-title=t("Send us an email"),
                  data-placement="bottom"
                )= config.supportEmail
        if isBot(ctx.get('User-Agent'))
          hr.d-lg-none.w-100
          .flex-wrap.flex-fill.d-flex.flex-column
            div
              h3.h6.text-uppercase.mb-2= t("Languages")
              ul.list-unstyled.mb-0.small
                each language in availableLanguages
                  li: a.d-block.text-light.py-2.py-md-0(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
        else
          noscript
            hr.d-lg-none.w-100
            .flex-wrap.flex-fill.d-flex.flex-column
              div
                h3.h6.text-uppercase.mb-2= t("Languages")
                ul.list-unstyled.mb-0.small
                  each language in availableLanguages
                    li: a.d-block.text-light.py-2.py-md-0(href=language.url)= `${titleize(t(language.name))} ${ctx.locale !== "en" ? `(${titleize(language.name)})` : ""}`
      .mt-5.text-muted.small
        ul.list-unstyled.small
          // <https://www.apple.com/legal/intellectual-property/trademark/appletmlist.html>
          li= t("Apple, Mac mini, Macbook, iMac, iPhone, macOS, iPad, watchOS, and Safari are registered trademarks of Apple Inc.")
          li= t("IOS is a trademark or registered trademark of Cisco.")
          //- <https://about.google/brand-resource-center/trademark-list/>
          //- <https://developer.android.com/distribute/marketing-tools/brand-guidelines>
          li= t("Android, Gmail, Google Chrome, Google Pixel, Chrome OS, Chromebook, and Chromium are trademarks of Google LLC.")
          //- <https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks>
          li= t("Microsoft, Windows, Internet Explorer, and Microsoft Edge are trademarks of the Microsoft group of companies.")
          //- <https://www.mozilla.org/en-US/foundation/trademarks/list/>
          //- <https://www-archive.mozilla.org/foundation/trademarks/policy>
          li= t("Mozilla, Firefox, and Thunderbird are trademarks or registered trademarks of the Mozilla Foundation.")
          //- <https://www.linuxfoundation.org/legal/trademark-usage>
          //- <https://isc.tamu.edu/~lewing/linux/> (Tux the Penguin)
          li= t("Linux is the registered trademark of Linus Torvalds.")
        ul.list-unstyled
          li
            != "&copy;"
            = " "
            = dayjs().format("YYYY")
            = " "
            = "Forward Email LLC"
          li= t("All rights reserved. All trademarks are property of their respective owners in the US and other countries.")
