//- Pug makes it DOCTYPE if we do this:
//- `doctype html`
!= "<!doctype html>"
html.h-100.no-js(
  lang=locale,
  class=isBot(ctx.get("User-Agent")) ? "bot-detected" : ""
)
  head
    block meta
      meta(charset="utf-8")
      meta(http-equiv="x-ua-compatible", content="ie=edge")
      if meta && meta.title
        title= striptags(meta.title)
      if meta && meta.description
        meta(name="description", content=striptags(meta.description))
      meta(name="viewport", content="width=device-width, initial-scale=1")

      //- canonical
      link(rel="canonical", href=`${config.urls.web}${ctx.path}`)

      //- languages supported
      //- <https://support.google.com/webmasters/answer/189077?hl=en>
      //- <https://support.google.com/webmasters/answer/182192?hl=en>
      //- <https://webmasters.stackexchange.com/questions/126514/should-en-and-x-default-be-included-on-the-same-page-for-hreflang-tags>
      //- <https://www.searchviu.com/en/multiple-hreflang-tags-one-url/>
      //- <https://twitter.com/JohnMu/status/837326127089729536>
      link(
        rel="alternate",
        href=`${config.urls.web}/${defaultLocale}${ctx.pathWithoutLocale === '/' ? '' : ctx.pathWithoutLocale}`,
        hreflang="x-default"
      )
      if availableLanguages
        each language in availableLanguages
          link(
            rel="alternate",
            href=`${config.urls.web}/${language.locale}${ctx.pathWithoutLocale === '/' ? '' : ctx.pathWithoutLocale}`,
            hreflang=language.locale
          )

      //- generated with https://realfavicongenerator.net
      link(
        rel="apple-touch-icon",
        sizes="152x152",
        href=manifest("img/apple-touch-icon.png"),
        integrity=manifest("img/apple-touch-icon.png", "integrity"),
        crossorigin="anonymous"
      )
      link(
        rel="icon",
        type="image/png",
        href=manifest("img/favicon-32x32.png"),
        sizes="32x32",
        integrity=manifest("img/favicon-32x32.png", "integrity"),
        crossorigin="anonymous"
      )
      link(
        rel="icon",
        type="image/png",
        href=manifest("img/favicon-16x16.png"),
        sizes="16x16",
        integrity=manifest("img/favicon-16x16.png", "integrity"),
        crossorigin="anonymous"
      )
      link(
        rel="manifest",
        href=manifest("site.webmanifest"),
        integrity=manifest("site.webmanifest", "integrity"),
        crossorigin="anonymous"
      )
      link(
        rel="mask-icon",
        href=manifest("img/safari-pinned-tab.svg"),
        integrity=manifest("img/safari-pinned-tab.svg", "integrity"),
        color=config.appColor,
        crossorigin="anonymous"
      )
      meta(name="apple-mobile-web-app-title", content=config.appName)
      meta(name="application-name", content=config.appName)
      meta(name="msapplication-TileColor", content=config.appColor)
      meta(name="theme-color", content="#ffffff")

      script.
        document.documentElement.className = document.documentElement.className.replace("no-js", "").replace(/\s+/g, " ").trim();
      if isBot(ctx.get('User-Agent'))
        style= ".is-bot { display: none !important; }"

      //- associate with wikipedia
      script(type="application/ld+json").
        {
          "@context": "http://schema.org",
          "@type": "Organization",
          "url": "https://forwardemail.net",
          "name": "Forward Email",
          "legalName": "Forward Email",
          "logo": "https://forwardemail.net/img/social.png",
          "sameAs": ["https://en.wikipedia.org/wiki/Forward_Email"]
        }

    //- add opengraph tags to your structured data pages
    block opengraph
      //- integrity=manifest(`og${ctx.path}.png`, "integrity"),
      - const ogImage = `${config.urls.web}${ctx.path}${ctx.pathWithoutLocale === "/" ? "/index" : ""}.png?v=${config.env === "test" ? 0 : Date.now()}`;
      link(
        rel="image_src",
        type="image/png",
        href=ogImage,
        crossorigin="anonymous"
      )
      meta(property="og:locale", content=locale)
      meta(property="og:type", content="article")
      meta(property="og:title", content=striptags(meta.title))
      meta(property="og:description", content=striptags(meta.description))
      meta(property="og:url", content=`${config.urls.web}${ctx.path}`)
      meta(property="og:site_name", content=config.appName)
      if ctx.pathWithoutLocale.startsWith('/faq')
        meta(
          property="article:section",
          content=t("Frequently Asked Questions")
        )
      else if ctx.pathWithoutLocale.startsWith('/guides')
        meta(property="article:section", content=t("Guides"))
      meta(property="og:image:alt", content=striptags(meta.title))
      //-.
        if gif
          meta(property="og:image:type", content="image/gif")
          meta(property="og:image", content=manifest(`img/guides/${gif}.gif`))
          meta(property="og:image:secure_url", content=manifest(`img/guides/${gif}.gif`))
          meta(property="og:image:width", content="960")
          meta(property="og:image:height", content="540")
      meta(property="og:image:type", content="image/png")
      meta(property="og:image", content=ogImage)
      meta(property="og:image:secure_url", content=ogImage)
      meta(property="og:image:width", content="1200")
      meta(property="og:image:height", content="630")

      if ['/', '/resources', '/about', '/terms', '/about', '/faq', '/private-business-email'].includes(ctx.pathWithoutLocale) || ctx.pathWithoutLocale.startsWith('/docs') || ctx.pathWithoutLocale.startsWith('/guides')
        meta(
          property="og:updated_time",
          content=dayjs().startOf("day").toDate().toISOString()
        )
        meta(
          property="article:published_time",
          content=dayjs().startOf("month").toDate().toISOString()
        )
        meta(
          property="article:modified_time",
          content=dayjs().startOf("day").toDate().toISOString()
        )

      if !video
        //- og video tag
        if ['/', '/private-business-email'].includes(ctx.pathWithoutLocale)
          - video = "https://www.youtube.com/watch?v=N6zjv40zuIY";
        else if ctx.pathWithoutLocale === "/guides/send-mail-as-gmail-custom-domain"
          //- gmail specific guide
          - video = "https://www.youtube.com/watch?v=MEheS8gM4Xs";
        else if ctx.pathWithoutLocale === "/guides/send-email-with-custom-domain-smtp"
          //- custom domain
          - video = "https://www.youtube.com/watch?v=MEheS8gM4Xs";
        else if ctx.pathWithoutLocale.startsWith('/docs')
          //- developers
          - video = "https://www.youtube.com/watch?v=1e9UyIoFu4Y";
        else if !ctx.pathWithoutLocale.startsWith('/guides') && (['/resources', '/about', '/terms', '/privacy', '/admin','/my-account', '/help', '/auth', '/denylist', '/reset-password'].every(key => !ctx.pathWithoutLocale.startsWith(key)))
          //- fallback with what is an alias video
          - video = "https://www.youtube.com/watch?v=oWEVGMPXMbA";

      if video
        meta(property="og:video", content=video)

      meta(property="twitter:title", content=striptags(meta.title))
      meta(property="twitter:description", content=striptags(meta.description))
      meta(property="twitter:image", content=ogImage)
      if (ctx.pathWithoutLocale !== '/' && ctx.pathWithoutLocale !== '/private-business-email' && ['/admin','/my-account', '/help', '/auth', '/denylist', '/reset-password'].every(key => !ctx.pathWithoutLocale.startsWith(key)))
        meta(name="twitter:label1", content=t("Written by"))
        meta(name="twitter:data1", content=config.appName + " " + t("Team"))
        meta(name="twitter:label2", content=t("Time to read"))
        meta(name="twitter:data2", content=t("Less than 5 minutes"))

    //- prefetch fonts
    //- https://caniuse.com/link-rel-prefetch
    - const fonts = ["fa-solid-900.woff2", "fa-brands-400.woff2"];
    if !isBot(ctx.get('User-Agent'))
      - fonts.push("nunito-sans-latin-400.woff2");
      - fonts.push("nunito-sans-latin-700.woff2");
      - fonts.push("inconsolata-dz.otf");
    each font in fonts
      //- integrity attribute not currently supported
      //- <https://crbug.com/981419>
      link(
        rel="preload",
        href=manifest(`fonts/${font}`),
        as="font",
        crossorigin="anonymous"
      )

    //- css file
    block stylesheets
      if isBot(ctx.get('User-Agent'))
        link(
          rel="stylesheet",
          href=manifest("css/app-bot.css"),
          integrity=manifest("css/app-bot.css", "integrity"),
          crossorigin="anonymous"
        )
      else
        link(
          rel="stylesheet",
          href=manifest("css/app.css"),
          integrity=manifest("css/app.css", "integrity"),
          crossorigin="anonymous"
        )

  body.d-flex.flex-column.min-h-100.app(
    role="document",
    onload=isBot(ctx.get("User-Agent")) ? "if (typeof lazyload === 'function') { lazyload(); }" : false
  )
    - const isHelp = ctx.pathWithoutLocale && ctx.pathWithoutLocale === "/help";
    - const isRegisterOrLogin = ctx.pathWithoutLocale && ["/register", config.loginRoute].includes(ctx.pathWithoutLocale);

    //- spinner
    block spinner
      include spinner/spinner
    //- navigation
    block navigation
      include _nav

    //- body
    main.flex-grow-1.d-flex.flex-column.flex-grow-1(role="main")
      block body

    //- modal watch video
    if !isBot(ctx.get('User-Agent'))
      #modal-watch-video.modal.fade(
        tabindex="-1",
        role="dialog",
        aria-labelledby="modal-watch-video-title",
        aria-hidden="true"
      )
        .modal-dialog.modal-lg(role="document")
          .modal-content
            .modal-header.text-center.d-block
              #modal-watch-video-title.h4.d-inline-block.ml-4= t("Made for you")
              button.close(
                type="button",
                data-dismiss="modal",
                aria-label="Close"
              )
                span(aria-hidden="true") &times;
            .modal-body
              .lazyframe(
                title=t("Forward Email's Paid Plans"),
                style="width: 100%; height: 450px",
                data-vendor="youtube_nocookie",
                data-src="https://www.youtube-nocookie.com/embed/N6zjv40zuIY?autoplay=0"
              )

    //- footer
    block footer
      include _footer

    //- scripts
    //- prettier-ignore
    block scripts
      if !isBot(ctx.get('User-Agent'))
        //- flash messaging (with koa-better-flash and sweetalert2)
        script(defer).
          window._types = {
            success: "#{ t('Success') }",
            error: "#{ t('Error') }",
            info: "#{ t('Info') }",
            warning: "#{ t('Warning') }",
            question: "#{ t('Question') }"
          };
        script(defer).
          window._messages = !{json(flash(), null, null)};

        //- set defaults for sweetalert2
        //- <https://github.com/limonte/sweetalert2/issues/763>
        script(defer).
          window._swalDefaults = {
            confirmButtonText: "#{ t('OK') }",
            cancelButtonText: "#{ t('Cancel') }",
            closeButtonAriaLabel: "#{ t('Close this dialog') }",
            reverseButtons: true,
          };

        //- set defaults for confirm prompt sweetalert2 modal
        script(defer).
          window._confirmPromptTitle = "#{ t('Are you sure?') }";
          window._confirmPromptHTML = "#{ t('Please confirm if you wish to continue.') }";

        //- set the locale to be used by front-end assets
        script(defer).
          window.LOCALE = "#{locale}";

        //- set the API endpoint to be used by front-end assets
        script(defer).
          window.API_URL = "#{config.urls.api}";

      //- set the user and API key to be used by CabinJS
      if config.env !== 'test' && !isBot(ctx.get('User-Agent'))
        //- set the user and API key to be used by CabinJS
        if user
          script(defer).
            window.USER = {
              id: "#{user.id}",
              name: "#{user[config.passport.fields.displayName]}",
              email: "#{user.email}",
            };
            window.API_TOKEN = "#{user[config.userFields.apiToken]}";
        else if ctx.sessionId
          script(defer).
            window.USER = {
              id: "#{ctx.sessionId}",
            };

      if isBot(ctx.get('User-Agent'))
        //- lazyload only support for bots
        script(
          defer,
          src=manifest("js/lazyload.js"),
          integrity=manifest("js/lazyload.js", "integrity"),
          crossorigin="anonymous"
        )
      else
        //- build
        script(
          defer,
          src=manifest("js/build.js"),
          integrity=manifest("js/build.js", "integrity"),
          crossorigin="anonymous"
        )

        //- TODO: remove plausible and migrate to our own
        //- analytics via plausible.io
        if ['/my-account', '/admin', '/verify', '/denylist', '/help', '/auth'].every(s => !ctx.pathWithoutLocale.startsWith(s))
          script(
            defer,
            data-domain="forwardemail.net",
            src="https://plausible.io/js/plausible.js"
          )

        //- cloudflare turnstile (hidden from bots and admins)
        if config.turnstileEnabled && (!user || user.group !== 'admin')
          script(defer).
            window.TURNSTILE_RENDER_ERROR = "#{ t('Turnstile render error, please try again or contact us.') }";
            window.TURNSTILE_SITE_KEY = "#{ config.turnstileSiteKey }";
          script(defer, src='https://challenges.cloudflare.com/turnstile/v0/api.js?onload=onloadTurnstileCallback')
